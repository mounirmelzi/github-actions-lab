name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Give Permission
      run: chmod +x ./gradlew

    - name: Run Unit Tests
      run: ./gradlew test

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: build/reports/tests

    - name: Generate Cucumber Reports
      run: ./gradlew generateCucumberReports

    - name: Upload Cucumber Reports
      uses: actions/upload-artifact@v4
      with:
        name: cucumber-reports
        path: build/reports/cucumber

    - name: Generate JaCoCo Coverage Report
      run: ./gradlew jacocoTestReport

    - name: Upload JaCoCo Reports
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-reports
        path: build/reports/jacoco

    - name: Run SonarQube Scan
      run: ./gradlew sonar
      env:
        SONARQUBE_HOST: ${{ secrets.SONARQUBE_HOST }}

    - name: SonarQube Server Quality Gate check
      id: quality-gate
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        scanMetadataReportFile: build/sonar/report-task.txt
        pollingTimeoutSec: 600
      env:
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Upload Jar Files
      uses: actions/upload-artifact@v4
      with:
        name: jar-files
        path: build/libs

    - name: Generate Documentation Using Javadoc
      run: ./gradlew javadoc

    - name: Upload Documentation
      uses: actions/upload-artifact@v4
      with:
        name: javadoc-documentation
        path: build/docs/javadoc

    - name: Publish to Maven Repository
      env:
        MY_REPO_URL: ${{ secrets.MY_REPO_URL }}
        MY_REPO_USERNAME: ${{ secrets.MY_REPO_USERNAME }}
        MY_REPO_PASSWORD: ${{ secrets.MY_REPO_PASSWORD }}
      run: ./gradlew publish

    - name: Slack Notification
      uses: slackapi/slack-github-action@v2.0.0
      if: always()
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          {
            "text": "*OGL TP7 - Java CI with Gradle*",
            "attachments": [
              {
                "title": "The GitHub Actions workflow has completed.",
                "text": "Workflow Status: ${{ job.status }}",
                "footer": "GitHub Actions",
                "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
              },
              {
                "title": "SonarQube Quality Gate.",
                "text": "Status: ${{ steps.quality-gate.outputs.quality-gate-status }}",
                "footer": "Quality Gate",
                "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
              }
            ]
          }

    - name: Mail Notification
      uses: dawidd6/action-send-mail@v4
      if: always()
      with:
        connection_url: ${{ secrets.MAIL_CONNECTION }}
        from: ${{ secrets.MAIL_FROM }}
        to: ${{ secrets.MAIL_TO }}
        subject: "OGL TP7 - Java CI with Gradle"
        html_body: |
          <html>
            <body>
              <h1>Status: <strong>${{ job.status }}</strong></h1>
              <h2>Additional Details:</h2>
              <ul>
                <li>Quality Gate: <strong>${{ steps.quality-gate.outputs.quality-gate-status }}</strong></li>
                <li>Repository: ${{ github.repository }}</li>
                <li>Branch: ${{ github.ref_name }}</li>
                <li>Triggered By: ${{ github.actor }}</li>
                <li>Run ID: <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Run</a></li>
              </ul>
            </body>
          </html>
        priority: normal
